
# Première étape : La maquette HTML

Une maquette HTML qui illustre le fonctionnement de l'application telle que je l'imagine
Pas de CSS
Pas de serveur, que du statique

Ce fut rapide (moins d'une heure) et le fait d'intéragir avec le résultat m'a donné envie 
de continuer (... même si c'était moche)

# Deuxième étape : Le serveur

Ajout d'un serveur express qui va afficher les pages statiques précédement créées
via le moteur de template EJS
Je n'ai pas modifié les pages si ce n'est les url des liens et formulaires 
(j'ai enlevé le .html, /options.html est devenu /options)

Ce fut rapide encore une fois (moins d'une heure)
Le rendu n'a pas changé mais maintenant j'ai un serveur et 
un moteur de template fonctionnels

# Troisième étape : la logique

Ajout de la logique dans les template pour afficher et modifier les sondages
Le stockage des sondages se fait en mémoire

J'ai maintenant une application fonctionnelle :-)

Ca m'a pris plus de temps (3h30), en particulier à cause 
de l'implémentation du jugement majoritaire.

# Quatrième étape : Organisation de la persistence fichier

Ajout d'un dossier contenant deux exemples de sondages tels que j'imagine qu'ils seront stockés 
une fois la persistence fichier mise en place

Ca m'a pris 1h et ca me permet de me rassurer sur le côté utilisable 

Le fait d'ajouter la notice d'utilisation directement dans le contenu de chaque fichier me plait beaucoup


# Cinquième étape : Implémentation de la persistence fichier

Le fait de stocker la documentation dans le fichier qui contient la données rend difficile l'implémentation 
des fonctions d'écriture et de lecture

Je pars sur le fait d'ajouter des fichiers readme.status, readme.title, readme.options... qui 
contiennent la doc

Ca m'a pris beaucoup plus de temps ! Environ (TODO) 4h+



# Next :

TODO Ajouter la persistance fichier
TODO Scinder les vues et les actions sans introduire de mécanisme particulier
TODO Renommer les fichiers pour que leur rôle soit plus explicite
TODO Embarquer le serveur node dans un service worker pour faire une appli 100% front
TODO Valider la logique de jugement majoritaire avec un framework de test maison
TODO Ajouter la delegation à un autre utilisateur

